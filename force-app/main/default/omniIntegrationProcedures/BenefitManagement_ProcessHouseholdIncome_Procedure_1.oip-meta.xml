<?xml version="1.0" encoding="UTF-8"?>
<OmniIntegrationProcedure xmlns="http://soap.sforce.com/2006/04/metadata">
    <customJavaScript>{
    &quot;HouseholdIncomeDetails&quot;: {
        &quot;IncomeNextMonth&quot;: 160,
        &quot;IncomeLastMonth&quot;: 150,
        &quot;IncomeFrequency&quot;: &quot;Weekly&quot;,
        &quot;IncomeCurrentMonth&quot;: 160,
        &quot;Employer&quot;: &quot;cisco&quot;
    },
    &quot;AccountId&quot;: &quot;001RO000004bJbeYAE&quot;
}</customJavaScript>
    <description>Processes the household income details from the applicant&apos;s assessment response, and creates or updates party income records.</description>
    <elementTypeComponentMapping>{&quot;ElementTypeToHTMLTemplateList&quot;:[]}</elementTypeComponentMapping>
    <isActive>false</isActive>
    <isIntegrationProcedure>true</isIntegrationProcedure>
    <isMetadataCacheDisabled>false</isMetadataCacheDisabled>
    <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
    <isTestProcedure>false</isTestProcedure>
    <isWebCompEnabled>false</isWebCompEnabled>
    <language>Procedure</language>
    <name>ProcessHouseholdIncome</name>
    <omniProcessElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>IfFrequencyMonthlyWhenIncomeDifferentforAllThreePeriods</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;HouseholdIncomeDetails:IncomeFrequency==\&quot;Monthly\&quot;&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;elementValueMap&quot; : {
    &quot;MonthlyIncomeData&quot; : [ {
      &quot;StartDate&quot; : &quot;=ADDDAY(EOM(ADDMONTH(TODAY(),-2)),1)&quot;,
      &quot;EndDate&quot; : &quot;=EOM(ADDMONTH(TODAY(),-1))&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(ADDMONTH(TODAY(),-1)))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeLastMonth%&quot;
    }, {
      &quot;StartDate&quot; : &quot;=ADDDAY(EOM(ADDMONTH(TODAY(),-1)),1)&quot;,
      &quot;EndDate&quot; : &quot;=EOM(TODAY())&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(TODAY()))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeCurrentMonth%&quot;
    }, {
      &quot;StartDate&quot; : &quot;=ADDDAY(EOM(TODAY()),1)&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(&apos;4000-12-30&apos;,1)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(ADDMONTH(TODAY(),1)))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeNextMonth%&quot;
    } ]
  },
  &quot;responseJSONPath&quot; : &quot;MonthlyIncomeData&quot;,
  &quot;responseJSONNode&quot; : &quot;IncomeData&quot;,
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;SetValues4&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>2.0</sequenceNumber>
            <type>Set Values</type>
        </childElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>IfFrequencyWeeklyWhenIncomeDifferentforAllThreePeriods</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;HouseholdIncomeDetails:IncomeFrequency==\&quot;Weekly\&quot;&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;elementValueMap&quot; : {
    &quot;WeeklyIncomeData&quot; : [ {
      &quot;StartDate&quot; : &quot;=ADDDAY(TODAY(),-7)&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(TODAY(),-1)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(ADDDAY(TODAY(),-1)))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeLastMonth%&quot;
    }, {
      &quot;StartDate&quot; : &quot;=TODAY()&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(TODAY(),6)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(TODAY()))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeCurrentMonth%&quot;
    }, {
      &quot;StartDate&quot; : &quot;=ADDDAY(TODAY(),7)&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(&apos;4000-12-30&apos;,1)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(ADDDAY(TODAY(),7)))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeNextMonth%&quot;
    } ]
  },
  &quot;responseJSONPath&quot; : &quot;WeeklyIncomeData&quot;,
  &quot;responseJSONNode&quot; : &quot;IncomeData&quot;,
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;SetValues4&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>1.0</sequenceNumber>
            <type>Set Values</type>
        </childElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>IfFrequencyYearlyWhenIncomeDifferentforAllThreePeriods</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;HouseholdIncomeDetails:IncomeFrequency==\&quot;Yearly\&quot;&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;elementValueMap&quot; : {
    &quot;YearlyIncomeData&quot; : [ {
      &quot;StartDate&quot; : &quot;=CONCAT(YEAR(ADDYEAR(TODAY(),-1)),&apos;-01-01&apos;)&quot;,
      &quot;EndDate&quot; : &quot;=CONCAT(YEAR(ADDYEAR(TODAY(),-1)),&apos;-12-31&apos;)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(ADDYEAR(TODAY(),-1)))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeLastMonth%&quot;
    }, {
      &quot;StartDate&quot; : &quot;=CONCAT(YEAR(TODAY()),&apos;-01-01&apos;)&quot;,
      &quot;EndDate&quot; : &quot;=CONCAT(YEAR(TODAY()),&apos;-12-31&apos;)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(TODAY()))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeCurrentMonth%&quot;
    }, {
      &quot;StartDate&quot; : &quot;=CONCAT(YEAR(ADDYEAR(TODAY(),1)),&apos;-01-01&apos;)&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(&apos;4000-12-30&apos;,1)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(ADDYEAR(TODAY(),1)))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeNextMonth%&quot;
    } ]
  },
  &quot;responseJSONPath&quot; : &quot;YearlyIncomeData&quot;,
  &quot;responseJSONNode&quot; : &quot;IncomeData&quot;,
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;SetValues4&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>3.0</sequenceNumber>
            <type>Set Values</type>
        </childElements>
        <isActive>true</isActive>
        <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
        <level>0.0</level>
        <name>IfIncomeDifferentforAllThreePeriods</name>
        <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
        <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;(HouseholdIncomeDetails:IncomeLastMonth != HouseholdIncomeDetails:IncomeCurrentMonth) &amp;&amp; (HouseholdIncomeDetails:IncomeCurrentMonth != HouseholdIncomeDetails:IncomeNextMonth)&quot;,
  &quot;isIfElseBlock&quot; : false,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;ConditionalBlock4&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
        <sequenceNumber>4.0</sequenceNumber>
        <type>Conditional Block</type>
    </omniProcessElements>
    <omniProcessElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>IfFrequencyMonthlyWhenIncomeSameForAllThreePeriods</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;HouseholdIncomeDetails:IncomeFrequency==\&quot;Monthly\&quot;&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;elementValueMap&quot; : {
    &quot;MonthlyIncomeData&quot; : [ {
      &quot;StartDate&quot; : &quot;=ADDDAY(EOM(ADDMONTH(TODAY(),-2)),1)&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(&apos;4000-12-30&apos;,1)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(TODAY()))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeCurrentMonth%&quot;
    } ]
  },
  &quot;responseJSONPath&quot; : &quot;MonthlyIncomeData&quot;,
  &quot;responseJSONNode&quot; : &quot;IncomeData&quot;,
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;SetValues4&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>2.0</sequenceNumber>
            <type>Set Values</type>
        </childElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>IfFrequencyWeeklyWhenIncomeSameForAllThreePeriods</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;HouseholdIncomeDetails:IncomeFrequency==\&quot;Weekly\&quot;&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;elementValueMap&quot; : {
    &quot;WeeklyIncomeData&quot; : [ {
      &quot;StartDate&quot; : &quot;=ADDDAY(TODAY(),-7)&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(&apos;4000-12-30&apos;,1)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(TODAY()))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeCurrentMonth%&quot;
    } ]
  },
  &quot;responseJSONPath&quot; : &quot;WeeklyIncomeData&quot;,
  &quot;responseJSONNode&quot; : &quot;IncomeData&quot;,
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;SetValues4&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>1.0</sequenceNumber>
            <type>Set Values</type>
        </childElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>IfFrequencyYearlyWhenIncomeSameForAllThreePeriods</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;HouseholdIncomeDetails:IncomeFrequency==\&quot;Yearly\&quot;&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;elementValueMap&quot; : {
    &quot;YearlyIncomeData&quot; : [ {
      &quot;StartDate&quot; : &quot;=CONCAT(YEAR(ADDYEAR(TODAY(),-1)),&apos;-01-01&apos;)&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(&apos;4000-12-30&apos;,1)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(TODAY()))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeCurrentMonth%&quot;
    } ]
  },
  &quot;responseJSONPath&quot; : &quot;YearlyIncomeData&quot;,
  &quot;responseJSONNode&quot; : &quot;IncomeData&quot;,
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;SetValues4&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>3.0</sequenceNumber>
            <type>Set Values</type>
        </childElements>
        <isActive>true</isActive>
        <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
        <level>0.0</level>
        <name>IfIncomeSameForAllThreePeriods</name>
        <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
        <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;(HouseholdIncomeDetails:IncomeLastMonth == HouseholdIncomeDetails:IncomeCurrentMonth) &amp;&amp; (HouseholdIncomeDetails:IncomeCurrentMonth == HouseholdIncomeDetails:IncomeNextMonth)&quot;,
  &quot;isIfElseBlock&quot; : false,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;ConditionalBlock3&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
        <sequenceNumber>1.0</sequenceNumber>
        <type>Conditional Block</type>
    </omniProcessElements>
    <omniProcessElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>IfFrequencyMonthlyWhenIncomeSameforCurrentAndNextPeriod</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;HouseholdIncomeDetails:IncomeFrequency==\&quot;Monthly\&quot;&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;elementValueMap&quot; : {
    &quot;MonthlyIncomeData&quot; : [ {
      &quot;StartDate&quot; : &quot;=ADDDAY(EOM(ADDMONTH(TODAY(),-2)),1)&quot;,
      &quot;EndDate&quot; : &quot;=EOM(ADDMONTH(TODAY(),-1))&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(ADDMONTH(TODAY(),-1)))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeLastMonth%&quot;
    }, {
      &quot;StartDate&quot; : &quot;=ADDDAY(EOM(ADDMONTH(TODAY(),-1)),1)&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(&apos;4000-12-30&apos;,1)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(ADDMONTH(TODAY(),1)))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeCurrentMonth%&quot;
    } ]
  },
  &quot;responseJSONPath&quot; : &quot;MonthlyIncomeData&quot;,
  &quot;responseJSONNode&quot; : &quot;IncomeData&quot;,
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;SetValues4&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>2.0</sequenceNumber>
            <type>Set Values</type>
        </childElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>IfFrequencyWeeklyWhenIncomeSameforCurrentAndNextPeriod</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;HouseholdIncomeDetails:IncomeFrequency==\&quot;Weekly\&quot;&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;elementValueMap&quot; : {
    &quot;WeeklyIncomeData&quot; : [ {
      &quot;StartDate&quot; : &quot;=ADDDAY(TODAY(),-7)&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(TODAY(),-1)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(ADDDAY(TODAY(),-1)))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeLastMonth%&quot;
    }, {
      &quot;StartDate&quot; : &quot;=TODAY()&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(&apos;4000-12-30&apos;,1)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(TODAY()))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeNextMonth%&quot;
    } ]
  },
  &quot;responseJSONPath&quot; : &quot;WeeklyIncomeData&quot;,
  &quot;responseJSONNode&quot; : &quot;IncomeData&quot;,
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;SetValues4&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>1.0</sequenceNumber>
            <type>Set Values</type>
        </childElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>IfFrequencyYearlyWhenIncomeSameforCurrentAndNextPeriod</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;HouseholdIncomeDetails:IncomeFrequency==\&quot;Yearly\&quot;&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;elementValueMap&quot; : {
    &quot;YearlyIncomeData&quot; : [ {
      &quot;StartDate&quot; : &quot;=CONCAT(YEAR(ADDYEAR(TODAY(),-1)),&apos;-01-01&apos;)&quot;,
      &quot;EndDate&quot; : &quot;=CONCAT(YEAR(TODAY()),&apos;-12-31&apos;)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(TODAY()))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeCurrentMonth%&quot;
    }, {
      &quot;StartDate&quot; : &quot;=CONCAT(YEAR(ADDYEAR(TODAY(),1)),&apos;-01-01&apos;)&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(&apos;4000-12-30&apos;,1)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(ADDYEAR(TODAY(),1)))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeNextMonth%&quot;
    } ]
  },
  &quot;responseJSONPath&quot; : &quot;YearlyIncomeData&quot;,
  &quot;responseJSONNode&quot; : &quot;IncomeData&quot;,
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;SetValues4&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>3.0</sequenceNumber>
            <type>Set Values</type>
        </childElements>
        <isActive>true</isActive>
        <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
        <level>0.0</level>
        <name>IfIncomeSameforCurrentAndNextPeriod</name>
        <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
        <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;((HouseholdIncomeDetails:IncomeLastMonth != HouseholdIncomeDetails:IncomeCurrentMonth) &amp;&amp;(HouseholdIncomeDetails:IncomeCurrentMonth == HouseholdIncomeDetails:IncomeNextMonth))&quot;,
  &quot;isIfElseBlock&quot; : false,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;ConditionalBlock1&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
        <sequenceNumber>3.0</sequenceNumber>
        <type>Conditional Block</type>
    </omniProcessElements>
    <omniProcessElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>IfFrequencyMonthlyWhenIncomeSameforPreviousAndCurrentPeriod</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;HouseholdIncomeDetails:IncomeFrequency==\&quot;Monthly\&quot;&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;elementValueMap&quot; : {
    &quot;MonthlyIncomeData&quot; : [ {
      &quot;StartDate&quot; : &quot;=ADDDAY(EOM(ADDMONTH(TODAY(),-2)),1)&quot;,
      &quot;EndDate&quot; : &quot;=EOM(TODAY())&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(TODAY()))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeCurrentMonth%&quot;
    }, {
      &quot;StartDate&quot; : &quot;=ADDDAY(EOM(TODAY()),1)&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(&apos;4000-12-30&apos;,1)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(ADDMONTH(TODAY(),1)))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeNextMonth%&quot;
    } ]
  },
  &quot;responseJSONPath&quot; : &quot;MonthlyIncomeData&quot;,
  &quot;responseJSONNode&quot; : &quot;IncomeData&quot;,
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;SetValues4&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>2.0</sequenceNumber>
            <type>Set Values</type>
        </childElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>IfFrequencyWeeklyWhenIncomeSameforPreviousAndCurrentPeriod</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;HouseholdIncomeDetails:IncomeFrequency==\&quot;Weekly\&quot;&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;elementValueMap&quot; : {
    &quot;WeeklyIncomeData&quot; : [ {
      &quot;StartDate&quot; : &quot;=ADDDAY(TODAY(),-7)&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(TODAY(),6)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(TODAY()))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeCurrentMonth%&quot;
    }, {
      &quot;StartDate&quot; : &quot;=ADDDAY(TODAY(),7)&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(&apos;4000-12-30&apos;,1)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(ADDDAY(TODAY(),7)))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeNextMonth%&quot;
    } ]
  },
  &quot;responseJSONPath&quot; : &quot;WeeklyIncomeData&quot;,
  &quot;responseJSONNode&quot; : &quot;IncomeData&quot;,
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;SetValues4&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>1.0</sequenceNumber>
            <type>Set Values</type>
        </childElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>IfFrequencyYearlyWhenIncomeSameforPreviousAndCurrentPeriod</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;HouseholdIncomeDetails:IncomeFrequency==\&quot;Yearly\&quot;&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;elementValueMap&quot; : {
    &quot;YearlyIncomeData&quot; : [ {
      &quot;StartDate&quot; : &quot;=CONCAT(YEAR(ADDYEAR(TODAY(),-1)),&apos;-01-01&apos;)&quot;,
      &quot;EndDate&quot; : &quot;=CONCAT(YEAR(TODAY()),&apos;-12-31&apos;)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(TODAY()))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeCurrentMonth%&quot;
    }, {
      &quot;StartDate&quot; : &quot;=CONCAT(YEAR(ADDYEAR(TODAY(),1)),&apos;-01-01&apos;)&quot;,
      &quot;EndDate&quot; : &quot;=ADDDAY(&apos;4000-12-30&apos;,1)&quot;,
      &quot;CalendarYear&quot; : &quot;=TOSTRING(YEAR(ADDYEAR(TODAY(),1)))&quot;,
      &quot;IncomeAmount&quot; : &quot;%HouseholdIncomeDetails:IncomeNextMonth%&quot;
    } ]
  },
  &quot;responseJSONPath&quot; : &quot;YearlyIncomeData&quot;,
  &quot;responseJSONNode&quot; : &quot;IncomeData&quot;,
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;SetValues4&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>3.0</sequenceNumber>
            <type>Set Values</type>
        </childElements>
        <isActive>true</isActive>
        <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
        <level>0.0</level>
        <name>IfIncomeSameforPreviousAndCurrentPeriod</name>
        <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
        <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;(HouseholdIncomeDetails:IncomeLastMonth == HouseholdIncomeDetails:IncomeCurrentMonth) &amp;&amp; (HouseholdIncomeDetails:IncomeCurrentMonth != HouseholdIncomeDetails:IncomeNextMonth)&quot;,
  &quot;isIfElseBlock&quot; : false,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;ConditionalBlock1&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
        <sequenceNumber>2.0</sequenceNumber>
        <type>Conditional Block</type>
    </omniProcessElements>
    <omniProcessElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>CreateNewPartyIncomeRecord</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;ISBLANK(FetchExistingPartyIncomeRecordForSameEmployer:PartyIncomeId)&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;useFormulas&quot; : true,
  &quot;additionalInput&quot; : {
    &quot;CalendarYear&quot; : &quot;=%IncomeData:CalendarYear%&quot;,
    &quot;StartDate&quot; : &quot;=%IncomeData:StartDate%&quot;,
    &quot;EndDate&quot; : &quot;=%IncomeData:EndDate%&quot;,
    &quot;IncomeType&quot; : &quot;Salary&quot;,
    &quot;Employer&quot; : &quot;=%HouseholdIncomeDetails:Employer%&quot;,
    &quot;IncomeFrequency&quot; : &quot;=%HouseholdIncomeDetails:IncomeFrequency%&quot;,
    &quot;PartyId&quot; : &quot;=%AccountId%&quot;,
    &quot;IncomeAmount&quot; : &quot;=%IncomeData:IncomeAmount%&quot;,
    &quot;IncomeStatus&quot; : &quot;Active&quot;
  },
  &quot;additionalOutput&quot; : { },
  &quot;failureResponse&quot; : { },
  &quot;sendOnlyAdditionalInput&quot; : true,
  &quot;returnOnlyAdditionalOutput&quot; : false,
  &quot;returnOnlyFailureResponse&quot; : false,
  &quot;responseJSONPath&quot; : &quot;&quot;,
  &quot;responseJSONNode&quot; : &quot;&quot;,
  &quot;sendJSONPath&quot; : &quot;&quot;,
  &quot;sendJSONNode&quot; : &quot;&quot;,
  &quot;bundle&quot; : &quot;PSSUpsertPartyIncome&quot;,
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;DataRaptorPostAction6&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>5.0</sequenceNumber>
            <type>DataRaptor Post Action</type>
        </childElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>FetchExistingPartyIncomeRecordForSameEmployer</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;useFormulas&quot; : true,
  &quot;additionalInput&quot; : {
    &quot;StartDate&quot; : &quot;=%IncomeData:StartDate%&quot;,
    &quot;EndDate&quot; : &quot;=%IncomeData:EndDate%&quot;,
    &quot;Employer&quot; : &quot;=%HouseholdIncomeDetails:Employer%&quot;,
    &quot;AccountId&quot; : &quot;=%AccountId%&quot;
  },
  &quot;additionalOutput&quot; : { },
  &quot;failureResponse&quot; : { },
  &quot;sendOnlyAdditionalInput&quot; : true,
  &quot;returnOnlyAdditionalOutput&quot; : false,
  &quot;returnOnlyFailureResponse&quot; : false,
  &quot;responseJSONPath&quot; : &quot;&quot;,
  &quot;responseJSONNode&quot; : &quot;&quot;,
  &quot;sendJSONPath&quot; : &quot;&quot;,
  &quot;sendJSONNode&quot; : &quot;&quot;,
  &quot;bundle&quot; : &quot;PSSFetchPartyIncomeForDateRange&quot;,
  &quot;dataRaptor Input Parameters&quot; : [ ],
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;ignoreCache&quot; : false,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;DataRaptorExtractAction8&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>3.0</sequenceNumber>
            <type>DataRaptor Extract Action</type>
        </childElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>FetchPreviousPartyIncomeRecords</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;useFormulas&quot; : true,
  &quot;additionalInput&quot; : {
    &quot;AccountId&quot; : &quot;=%AccountId%&quot;,
    &quot;StartDate&quot; : &quot;=%IncomeData:StartDate%&quot;,
    &quot;EndDate&quot; : &quot;=ADDDAY(&apos;4000-12-30&apos;, 1)&quot;,
    &quot;Employer&quot; : &quot;=%HouseholdIncomeDetails:Employer%&quot;
  },
  &quot;additionalOutput&quot; : { },
  &quot;failureResponse&quot; : { },
  &quot;sendOnlyAdditionalInput&quot; : true,
  &quot;returnOnlyAdditionalOutput&quot; : false,
  &quot;returnOnlyFailureResponse&quot; : false,
  &quot;responseJSONPath&quot; : &quot;&quot;,
  &quot;responseJSONNode&quot; : &quot;&quot;,
  &quot;sendJSONPath&quot; : &quot;&quot;,
  &quot;sendJSONNode&quot; : &quot;&quot;,
  &quot;bundle&quot; : &quot;PSSFetchPartyIncomeSpanningDate&quot;,
  &quot;dataRaptor Input Parameters&quot; : [ ],
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;ignoreCache&quot; : false,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;DataRaptorExtractAction1&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>1.0</sequenceNumber>
            <type>DataRaptor Extract Action</type>
        </childElements>
        <childElements>
            <childElements>
                <isActive>true</isActive>
                <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
                <level>2.0</level>
                <name>EndDatePreviousPartyIncomeRecord</name>
                <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
                <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;useFormulas&quot; : true,
  &quot;additionalInput&quot; : {
    &quot;CalendarYear&quot; : &quot;=%FetchPreviousPartyIncomeRecords:Records:CalendarYear%&quot;,
    &quot;PartyIncomeId&quot; : &quot;=%FetchPreviousPartyIncomeRecords:Records:PartyIncomeId%&quot;,
    &quot;StartDate&quot; : &quot;=%FetchPreviousPartyIncomeRecords:Records:StartDate%&quot;,
    &quot;EndDate&quot; : &quot;=ADDDAY(%IncomeData:StartDate%, -1)&quot;,
    &quot;IncomeType&quot; : &quot;=%FetchPreviousPartyIncomeRecords:Records:IncomeType%&quot;,
    &quot;Employer&quot; : &quot;=%FetchPreviousPartyIncomeRecords:Records:Employer%&quot;,
    &quot;IncomeFrequency&quot; : &quot;=%FetchPreviousPartyIncomeRecords:Records:IncomeFrequency%&quot;,
    &quot;PartyId&quot; : &quot;=%FetchPreviousPartyIncomeRecords:Records:PartyId%&quot;,
    &quot;IncomeAmount&quot; : &quot;=%FetchPreviousPartyIncomeRecords:Records:IncomeAmount%&quot;,
    &quot;IncomeStatus&quot; : &quot;=%FetchPreviousPartyIncomeRecords:Records:IncomeStatus%&quot;
  },
  &quot;additionalOutput&quot; : { },
  &quot;failureResponse&quot; : { },
  &quot;sendOnlyAdditionalInput&quot; : true,
  &quot;returnOnlyAdditionalOutput&quot; : false,
  &quot;returnOnlyFailureResponse&quot; : false,
  &quot;responseJSONPath&quot; : &quot;&quot;,
  &quot;responseJSONNode&quot; : &quot;&quot;,
  &quot;sendJSONPath&quot; : &quot;&quot;,
  &quot;sendJSONNode&quot; : &quot;&quot;,
  &quot;bundle&quot; : &quot;PSSUpsertPartyIncome&quot;,
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;DataRaptorPostAction5&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
                <sequenceNumber>1.0</sequenceNumber>
                <type>DataRaptor Post Action</type>
            </childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>LoopPreviousPartyIncomeRecords</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;loopList&quot; : &quot;FetchPreviousPartyIncomeRecords:Records&quot;,
  &quot;executionConditionalFormula&quot; : &quot;FetchPreviousPartyIncomeRecords:Records != \&quot;null\&quot;&quot;,
  &quot;loopOutput&quot; : { },
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;LoopBlock2&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>2.0</sequenceNumber>
            <type>Loop Block</type>
        </childElements>
        <childElements>
            <isActive>true</isActive>
            <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
            <level>1.0</level>
            <name>UpdateExistingPartyIncomeRecord</name>
            <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
            <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;ISNOTBLANK(FetchExistingPartyIncomeRecordForSameEmployer:PartyIncomeId)&quot;,
  &quot;failureConditionalFormula&quot; : &quot;&quot;,
  &quot;failOnStepError&quot; : true,
  &quot;useFormulas&quot; : true,
  &quot;additionalInput&quot; : {
    &quot;CalendarYear&quot; : &quot;=%FetchExistingPartyIncomeRecordForSameEmployer:CalendarYear%&quot;,
    &quot;PartyIncomeId&quot; : &quot;=%FetchExistingPartyIncomeRecordForSameEmployer:PartyIncomeId%&quot;,
    &quot;StartDate&quot; : &quot;=%FetchExistingPartyIncomeRecordForSameEmployer:StartDate%&quot;,
    &quot;EndDate&quot; : &quot;=%FetchExistingPartyIncomeRecordForSameEmployer:EndDate%&quot;,
    &quot;IncomeType&quot; : &quot;=%FetchExistingPartyIncomeRecordForSameEmployer:IncomeType%&quot;,
    &quot;Employer&quot; : &quot;=%FetchExistingPartyIncomeRecordForSameEmployer:Employer%&quot;,
    &quot;IncomeFrequency&quot; : &quot;=%FetchExistingPartyIncomeRecordForSameEmployer:IncomeFrequency%&quot;,
    &quot;PartyId&quot; : &quot;=%FetchExistingPartyIncomeRecordForSameEmployer:PartyId%&quot;,
    &quot;IncomeAmount&quot; : &quot;=%IncomeData:IncomeAmount%&quot;,
    &quot;IncomeStatus&quot; : &quot;=%FetchExistingPartyIncomeRecordForSameEmployer:IncomeStatus%&quot;
  },
  &quot;additionalOutput&quot; : { },
  &quot;failureResponse&quot; : { },
  &quot;sendOnlyAdditionalInput&quot; : true,
  &quot;returnOnlyAdditionalOutput&quot; : false,
  &quot;returnOnlyFailureResponse&quot; : false,
  &quot;responseJSONPath&quot; : &quot;&quot;,
  &quot;responseJSONNode&quot; : &quot;&quot;,
  &quot;sendJSONPath&quot; : &quot;&quot;,
  &quot;sendJSONNode&quot; : &quot;&quot;,
  &quot;bundle&quot; : &quot;PSSUpsertPartyIncome&quot;,
  &quot;chainOnStep&quot; : false,
  &quot;actionMessage&quot; : &quot;&quot;,
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;DataRaptorPostAction6&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
            <sequenceNumber>4.0</sequenceNumber>
            <type>DataRaptor Post Action</type>
        </childElements>
        <isActive>true</isActive>
        <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
        <level>0.0</level>
        <name>LoopPartyIncomeData</name>
        <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
        <propertySetConfig>{
  &quot;loopList&quot; : &quot;IncomeData&quot;,
  &quot;executionConditionalFormula&quot; : &quot;&quot;,
  &quot;loopOutput&quot; : {
    &quot;IncomeAmount&quot; : &quot;%IncomeData:IncomeAmount%&quot;
  },
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;LoopBlock1&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
        <sequenceNumber>5.0</sequenceNumber>
        <type>Loop Block</type>
    </omniProcessElements>
    <omniProcessElements>
        <isActive>true</isActive>
        <isOmniScriptEmbeddable>false</isOmniScriptEmbeddable>
        <level>0.0</level>
        <name>ResponseAction1</name>
        <omniProcessVersionNumber>0.0</omniProcessVersionNumber>
        <propertySetConfig>{
  &quot;executionConditionalFormula&quot; : &quot;&quot;,
  &quot;useFormulas&quot; : true,
  &quot;additionalOutput&quot; : { },
  &quot;returnOnlyAdditionalOutput&quot; : false,
  &quot;returnFullDataJSON&quot; : false,
  &quot;responseFormat&quot; : &quot;JSON&quot;,
  &quot;responseJSONPath&quot; : &quot;&quot;,
  &quot;responseJSONNode&quot; : &quot;LoopPartyIncomeData&quot;,
  &quot;sendJSONPath&quot; : &quot;&quot;,
  &quot;sendJSONNode&quot; : &quot;&quot;,
  &quot;responseDefaultData&quot; : { },
  &quot;vlcResponseHeaders&quot; : { },
  &quot;show&quot; : null,
  &quot;label&quot; : &quot;ResponseAction1&quot;,
  &quot;disOnTplt&quot; : false
}</propertySetConfig>
        <sequenceNumber>6.0</sequenceNumber>
        <type>Response Action</type>
    </omniProcessElements>
    <omniProcessKey>BenefitManagement_ProcessHouseholdIncome</omniProcessKey>
    <omniProcessType>Integration Procedure</omniProcessType>
    <propertySetConfig>{
  &quot;linkToExternalObject&quot; : &quot;&quot;,
  &quot;trackingCustomData&quot; : { },
  &quot;includeAllActionsInResponse&quot; : false,
  &quot;columnsPropertyMap&quot; : [ ],
  &quot;relationshipFieldsMap&quot; : [ ],
  &quot;labelSingular&quot; : &quot;&quot;,
  &quot;labelPlural&quot; : &quot;&quot;,
  &quot;description&quot; : &quot;&quot;,
  &quot;nameColumn&quot; : &quot;&quot;,
  &quot;rollbackOnError&quot; : true,
  &quot;chainableQueriesLimit&quot; : 50,
  &quot;chainableDMLStatementsLimit&quot; : null,
  &quot;chainableCpuLimit&quot; : 2000,
  &quot;chainableHeapSizeLimit&quot; : null,
  &quot;chainableDMLRowsLimit&quot; : null,
  &quot;chainableQueryRowsLimit&quot; : null,
  &quot;chainableSoslQueriesLimit&quot; : null,
  &quot;chainableActualTimeLimit&quot; : null,
  &quot;additionalChainableResponse&quot; : { },
  &quot;queueableChainableQueriesLimit&quot; : 120,
  &quot;queueableChainableCpuLimit&quot; : 40000,
  &quot;queueableChainableHeapSizeLimit&quot; : 6,
  &quot;ttlMinutes&quot; : 5,
  &quot;mockResponseMap&quot; : { }
}</propertySetConfig>
    <subType>ProcessHouseholdIncome</subType>
    <type>BenefitManagement</type>
    <uniqueName>BenefitManagement_ProcessHouseholdIncome_Procedure_1</uniqueName>
    <versionNumber>1.0</versionNumber>
    <webComponentKey>b539fd4f-9e79-e921-a925-33e9bcc13da0</webComponentKey>
</OmniIntegrationProcedure>
